#!/bin/bash
# shebang is unnecessary, but helps vim identify the filetype
#
# shellcheck disable=SC1090  # disable "Can't follow non-constant source."
# shellcheck disable=SC1091  # disable "not following" included files
# shellcheck disable=SC1117  # "backslash is literal"
# shellcheck disable=SC2154  # "referenced but not assigned"

# The onetwo prompt with uptime in days and hours (although it only shows
# up after '_p_minuptime' days).  This version, onetwored.private, is a
# modification of onetwo.private initially intented for a Raspberry Pi
# (2018-03).
#
# NOTE: the ${remainingWidth} is very approximate (ie. probably flat out
# wrong).  As I'm not using it to fill width, I haven't worried about the
# precision.
#
# BUG (not specific to this prompt, but more apparent than most), bold
# colours don't work on Mac, and this uses them a lot.  The two reds
# (_pc_red and _pc_b_red) are the same, and _pc_darkgray is simply black on
# the Mac.  Can we reset them to Mac-specific colours if Mac is detected?

echo "Prompt Title: onetwored"
echo "Includes:     pwd, git, uptime (conditionally), user@host"
echo "For:          a dark background"
echo "Requires:     git"

source "${PROMPTDIR}/_p_colours" # get colours into the environment
source "${PROMPTDIR}/directory/_p_git"
source "${PROMPTDIR}/directory/_p_xtermtitle"
source "${PROMPTDIR}/machine/_p_uptime"
source "${PROMPTDIR}/machine/_p_upseconds"

_p_minuptime=5 # days
# shellcheck disable=SC2034  # appears unused ...
minRemainingWidth=50

_p_xtermtitle # generates the _p_TITLEBAR variable

prompt_command () {
    _p_retval=$? # capture the return value before you change it
    if (( _p_retval == 0 ))
    then
        # disappear the return value if it's zero
        _p_retval=""
    fi

    _p_displayGit="$(_p_git)"
    _p_tilde="~"
    # on Linux/Bash4 we need "\~", on Mac/Bash3 we need "~" in this
    # substitution, so we get around it by making it a variable ...:
    _p_dir="${PWD/${HOME}/${_p_tilde}}"
    _p_up="$(_p_uptime)"
    if (( $(_p_upseconds) >= ( _p_minuptime * 24 * 60 * 60 ) ))
    then
        _p_show_up=0
    else
        # shellcheck disable=SC2034  # appears unused ...
        _p_show_up=1
    fi
}

PROMPT_COMMAND=" prompt_command ; ${PROMPT_COMMAND} "

PS1=""
PS1="${PS1}${_p_TITLEBAR}"
# shellcheck disable=SC1001  # "This \u will be a regular 'u' in this context"
PS1="${PS1}\$(
if (( _p_show_up == 0 ))
then
    remainingWidth=\$(( COLUMNS - \${#_p_up} - 3 - \${#_p_dir} - \${#_p_displayGit} - \$(echo "\u@\h" | wc -c) - 3 ))
else
    remainingWidth=\$(( COLUMNS - \${#_p_dir} - \${#_p_displayGit} - \$(echo "\u@\h" | wc -c) - 3 ))
fi

if (( remainingWidth <= minRemainingWidth )) ;  # the two line version
then
    echo -en \"${_pc_darkgray}-${_pc_red}-${_pc_b_red}(\"
    if (( _p_show_up == 0 ))
    then
        echo -en \"${_pc_b_yellow}\${_p_up}\"
        echo -en \"${_pc_b_red})-${_pc_red}-${_pc_b_red}(\"
    fi
    echo -en \"${_pc_red}\${_p_dir}\"
    echo -en \"${_pc_b_red})-${_pc_red}-\"
    if ! [ \"\${_p_displayGit}x\" = \"x\" ]
    then
        echo -en \"${_pc_b_red}(\"
        echo -en \"${_pc_b_gray}\${_p_displayGit}${_pc_nocolour}\"
        echo -en \"${_pc_b_red})-${_pc_red}-\"
    fi
    echo -en \"${_pc_darkgray}-${_pc_nocolour}\"
    echo -en \"\n\"
    echo -en \"${_pc_darkgray}-${_pc_red}-${_pc_b_red}(\"
    echo -en \"${_pc_red}\u${_pc_darkgray}@${_pc_red}\h\"
    echo -en \"${_pc_bg_gray}${_pc_b_red}\${_p_retval}\"
    echo -en \"${_pc_nocolour}\"
    echo -en \"${_pc_darkgray}\$\"
    echo -en \"${_pc_b_red})-${_pc_red}-${_pc_darkgray}-\"
    echo -e  \"${_pc_nocolour} \";

else   # the one line version

    echo -en \"${_pc_darkgray}-${_pc_red}-${_pc_b_red}(\"
    if (( _p_show_up == 0 ))
    then
        echo -en \"${_pc_b_yellow}\${_p_up}\"
        echo -en \"${_pc_b_red})-${_pc_red}-${_pc_b_red}(\"
    fi
    echo -en \"${_pc_red}\${_p_dir}\"
    if [ \"\${_p_displayGit}x\" != \"x\" ]
    then
        echo -en \"${_pc_darkgray}|\"
        echo -en \"${_pc_b_gray}\${_p_displayGit}\"
    fi
    echo -en \"${_pc_darkgray}|${_pc_nocolour}\"
    echo -en \"${_pc_red}\u${_pc_darkgray}@${_pc_red}\h\"
    echo -en \"${_pc_bg_gray}${_pc_b_red}\${_p_retval}\"
    echo -en \"${_pc_nocolour}\"
    echo -en \"${_pc_darkgray}\$\"
    echo -en \"${_pc_b_red})-${_pc_red}-${_pc_darkgray}-\"
    echo -e  \"${_pc_nocolour} \";
fi
)"

if ${_p_in_typescript}
then
    echo "you're in typescript"
    PS1="\u@\w\$ "
fi

export PS1

