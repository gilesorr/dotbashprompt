#!/bin/bash # helps vim figure out the filetype
#

pushd ${PROMPTDIR} > /dev/null

echo "Prompt Title: datetimegit"
echo "Includes:     date, colourslash pwd, git, uptime, user@host"
echo "For:          a light background"
echo "Requires:     git"

source _p_colours # get colours into the environment
source directory/_p_colourslashpwd
source directory/_p_git
source directory/_p_xtermtitle
source time/_p_yyyy-mm-dd
# This one is usually called by _p_uptime, but we need it separately
# to test uptime in PROMPT_COMMAND:
source machine/_p_upseconds
source machine/_p_uptime
export PROMPT_COMMAND="" # blank this if you're not using it
popd > /dev/null

function prompt_command () {
    _p_xtermtitle # generates the _p_TITLEBAR variable
    # minimum days of uptime before uptime is shown:
    local minuptime=5
    # TODO: brutal fail on the Mac
    if [ $(_p_upseconds) -ge $((${minuptime}*24*60*60)) ]
    then
        _p_up="$(_p_uptime)"
    else
        _p_up=""
    fi
}
export PROMPT_COMMAND=prompt_command

PS1=""
PS1="${PS1}${_p_TITLEBAR}"
PS1="${PS1}\$(_p_yyyy-mm-dd)" # date in yyyy-mm-dd format
PS1="${PS1}:"           # add a colon
PS1="${PS1}\$(_p_colourslashpwd \${_pc_b_red} \${_pc_b_yellow} \${_pc_nocolour} )" # add PWD with off-colour slashes
PS1="${PS1}${_pc_b_green}(\$(_p_git))" # add git status in green
PS1="${PS1}${_pc_nocolour}"          # colours off
PS1="${PS1}\n"                       # newline
PS1="${PS1}${_pc_b_red}"             # bright red
PS1="${PS1}\${_p_up}"                # uptime (if greater than some value)
PS1="${PS1}${_pc_nocolour}"          # colours off
PS1="${PS1}:"                        # colon
PS1="${PS1}\u@\h"                    # user @ hostname
PS1="${PS1}${_pc_b_yellow}"          # bright yellow
PS1="${PS1}\$"                       # $ or # depending on user
PS1="${PS1}${_pc_nocolour} "

export PS1

