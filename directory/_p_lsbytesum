#!/bin/bash
#
# Uses the file-by-file output of "ls" to sum up the space used by the
# current directory.
#
# 2017-08-17: DEPRECATED, prefer _p_statbytesum.  Broken on Mac (output
# columns of ls are different than on Linux).  While this was fixable,
# 'statbytesum' seemed simpler overall (it's also OS-dependent
# unfortunately).

_p_lsbytesum () {
    (( _p_scale=1 ))      # number of digits after the decimal place
    (( TotalBytes=0 ))

    for Bytes in $(command ls -l | command grep "^-" | command awk '{ print $5 }')
    do
        (( TotalBytes = TotalBytes + Bytes ))
    done

    # The if...fi's give a more specific output in byte, kilobyte, megabyte,
    # gigabyte, terabyte

    if (( TotalBytes < 1024 )); then
        TotalSize="${TotalBytes}"
        suffix="B"
    elif (( TotalBytes < 1048576 )); then
        TotalSize=$(echo -e "scale=${_p_scale} ; ${TotalBytes}/1024" | command bc)
        suffix="KiB"
    elif (( TotalBytes < 1073741824 )); then
        TotalSize=$(echo -e "scale=${_p_scale} ; ${TotalBytes}/1048576" | command bc)
        suffix="MiB"
    elif (( TotalBytes < 1099511627776 )); then
        TotalSize=$(echo -e "scale=${_p_scale} ; ${TotalBytes}/1073741824" | command bc)
        suffix="GiB"
    else
        TotalSize=$(echo -e "scale=${_p_scale} ; ${TotalBytes}/1099511627776" | command bc)
        suffix="TiB"
    fi

    echo -n "${TotalSize}${suffix}"
}

