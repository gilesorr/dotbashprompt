#!/bin/bash
#
# Large portions of this were lovingly borrowed from nitrous.io's prompt
# because it's simple, readable, and works well.  Thanks!  It's since been
# modified a LOT.
#
# 2016-02-24: added "+" after ahead("^") and/or behind("v") if there are
# untracked files.  Still doesn't show if there are staged-but-uncommitted
# files.

function _p_git () {

    function _p_git_dirty  () {
        git diff --no-ext-diff --quiet --exit-code &>/dev/null
        git_dirty=$?
        case $git_dirty in
            0) ;;
            1) echo "!";;
            128) echo "-bare";;
            *) ;;
        esac
    }

    function _p_git_up     () {
        status="$(git status 2> /dev/null)"
        upstream="$(echo ${status} | grep 'Your branch is')"
        if [ "${upstream}x" != "x" ]
        then
            # we appear to have an origin
            git_uptodate=$(echo "${upstream}" | grep "up-to-date" -q ; echo $?)
            git_ahead=$(   echo "${upstream}" | grep "ahead of"   -q ; echo $?)
            git_behind=$(  echo "${upstream}" | grep "behind"     -q ; echo $?)
            git_untrack=$( echo "${status}"   | grep "ntrack"     -q ; echo $?)
            if [ ${git_uptodate} -eq 0 ]
            then
                #echo "-"
                echo -n ""
            fi
            if [ ${git_ahead} -eq 0 ]
            then
                echo -n "^"
            fi
            if [ ${git_behind} -eq 0 ]
            then
                echo -n "v"
            fi
            if [ ${git_untrack} -eq 0 ]
            then
                echo -n "+"
            fi
        fi
    }

    function _p_git_branch () {
        branch_name=$(git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/\1/")
        if [ "${branch_name}x" != "x" ]
        then
            echo -n "(${branch_name}$(_p_git_dirty)$(_p_git_up))"
        fi
    }

    _p_git_branch

}

